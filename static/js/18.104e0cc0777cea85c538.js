webpackJsonp([18,170],{686:function(n,t){n.exports={rawContent:"\n\n## Take a sad song, and make it better：爬取百度音乐\n\n以下，个人的一个trial and error的过程，仅供参考。\n\n用到一些基本知识比如HTTP请求啊，html啊，json啊，ajax啊，当然，不懂也没关系……\n使用了一些工具比如firefox啊，firebug啊，python啊……当然你们喜欢用chrome/chromium还是IE都一样……\n\n也许是我听的歌太小众了，经常会发现有些歌在线听的好好的，竟然没有下载链接\n\n![](/images/spider/baidu_music.png \"baidu音乐\")]\n\n对此，很不理解，在线可以听到就说明浏览器已经把媒体文件下载下来并且播放出来了……为啥会告诉我没有下载链接？\n\n某天，听到Beatles的Hey Jude，我忽然觉得得动手找找音乐文件是哪里的。于是，打开firebug，选择network标签下的media标签，可是什么也没有。\n\n![](/images/spider/baidumusic.png)\n\n唉？于是又确认了下，百度音乐在线播放器不是flash，满满的html5标签= =\n\n凭借直觉，应该和xmlhttprequest有关系，于是抱着试试看的心理打开firebug上的xhr标签\n\n![](/images/spider/baidumusic1.png)\n\n哇，果然有好多请求，咦？songlink？凭借直觉似乎是音乐链接地址……\n\n打开返回的json看了看果然有个来自file.qianqian.com的疑似歌曲链接(有时候用firebug的搜索功能也不失为良策)……\n\n![](/images/spider/baidumusic3.png)\n\n把引号中的链接复制粘帖到地址栏，哇，果然是歌曲mp3啊\n\n![](/images/spider/baidumusic4.png)\n\n我们可以再认真看看返回的json，其中有lrc歌词链接，有封面图片链接、歌曲文件大小啊等等\n\n接下来的问题是，如果想下载其它歌曲怎么办。首先观察之前我们获取想要mp3链接的POST请求。\n\n![](/images/spider/baidumusic2.png)\n\n请求参数中有一个songID？似乎很清晰的样子，我猜吧，每个歌曲在百度音乐库中都对应这么一个ID\n\n后来发现确实差不多。\n\n至此，可以开始写自己的爬虫了……\n\n关键部分大致这样\n\n```python\ndef download_by_song_id_list(song_id_list):\n    song_data = 'songIds=' + \"%2C\".join(song_id_list)\n    song_link_url = \"http://play.baidu.com/data/music/songlink\"\n    headers = {\"X-Requested-With\": \"XMLHttpRequest\",\n               \"Content-Type\": \"application/x-www-form-urlencoded;\\\n               charset=UTF-8\"}\n    r = requests.post(song_link_url, data=song_data, headers=headers)\n    data = json.loads(r.content)\n    for it in data['data']['songList']:\n        print '\\n' + it['songName'], ': ', it['size'], \"bytes\"\n        # print it['songLink']\n        r_song = requests.get(it['songLink'], stream=True)\n        with open(it['songName'] + '.' + it['format'], 'wb') as f:\n            dl = 0\n            total_length = int(it['size'])\n            for b in r_song.iter_content():\n                if not b:\n                    break\n                dl += len(b)\n                f.write(b)\n                done = int(50 * dl / total_length)\n                sys.stdout.write(\"\\r[%s%s] %.2f%%\"\n                                 % ('=' * done, ' '\n                                    * (50 - done), 100.0 * dl / total_length))\n                sys.stdout.flush()\n            print '\\n' + it['songName'] + '.' + it['format'], \" finished\"\n```\n",metaData:{layout:"post",title:"Python Spider: 爬取百度音乐",excerpt:"速写爬虫的一些经历",category:"python",tags:["python","spider"],disqus:!0}}}});
//# sourceMappingURL=18.104e0cc0777cea85c538.js.map