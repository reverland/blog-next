webpackJsonp([56,193],{567:function(n,e){n.exports={rawContent:"\n\n## x64\n\n整型和指针型参数次保存在寄存器:\n\n- `rdi`\n- `rsi`\n- `rdx`\n- `rcx`\n- `r8`\n- 'r9'\n\n浮点型参数依次保存到:\n\n- `xmm0`\n- `xmm1`\n...\n\n其它从右往左依次入栈。\n\n## x86\n\n从右往左依次入栈，即在栈上从低地址向高地址分布。\n\n一般栈上是这样的，从上到下地址增长：\n\n    0 1 2 3\n    ...\n    --------\n    上层FP  <----FP\n    --------\n    返回地址\n    --------\n    参数1\n    --------\n    参数2\n    ...\n\n如果参数大于四个字节，则占据多个字节，按cpu字节序(endian)入栈\n\n### fastcall\n\n使用寄存器，前三个使用寄存器传递参数：\n\n- `eax`\n- `edx`\n- `ecx`\n\n其它按入栈规则入栈。\n\n## C++\n\n除了参数，对象指针也会被传递。\n",metaData:{layout:"post",title:"linux下函数参数调用",excerpt:"概览，笔记",category:"reverse",tags:["reverse"],disqus:!0}}}});