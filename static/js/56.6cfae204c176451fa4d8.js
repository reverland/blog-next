webpackJsonp([56,170],{296:function(n,e){n.exports={rawContent:"\n\n## 缘起\n\n大概是因为论坛一个毕业去阿里的师兄就这么扫到了一个某品牌摄像头web管理界面。接着，对于我，YD的几周便开始了。各种扫描内网啊，No zuo no die啊= =，然后找到了一大堆开放到内网的摄像头、弱口令ssh、匿名ftp、嵌入式板甚至还有ip电话……独留我风中凌乱。\n\n我准备把常见的东西都研究一圈= =\n\n总之，用到了几种扫描器和自己写的扫描器……\n\n## nmap\n\nnmap是一个专业的网络探索和安全审计开源工具。尽管它可以针对主机，却被设计来快速扫描大规模网络。nmap使用IP报文来决定网络上的主机是否可达，主机上哪些服务开放(应用程序名和版本)，它们运行着什么样的操作系统，包过滤器和防火墙的情况和许多其它特征。尽管nmap广泛用于安全审计。许多系统和网络管理员在实行日常工作比如网络发现、管理服务升级安排，监控主机或服务启动时间\n时都很好用。\n\nnmap的输出是一列被扫描的目标，和有关参数指定的补充信息。常见的比如说端口信息表：\n\n ~ ⮀ sudo nmap 10.210.96.193\n\n    Starting Nmap 6.25 ( http://nmap.org ) at 2014-04-18 21:44 CST\n    Nmap scan report for 10.210.96.193\n    Host is up (0.054s latency).\n    Not shown: 996 closed ports\n    PORT      STATE    SERVICE\n    21/tcp    ssh      closed\n    23/tcp    open     telnet\n    50389/tcp filtered unknown\n    MAC Address: 3C:E5:A6:D2:39:AD (Hangzhou H3C Technologies Co.)\n\n- `open`意味着服务在启动并监听着。比如TCP的三次握手成功建立。\n- `closed`表示该端口上服务关闭。比如收到了目标主机返回的RST.\n- `filtered`意味着有防火墙，过滤器等其它障碍阻塞了端口，以致于nmap不知道端口是`open`还是`closed`。出现这种情况是发出去的探测包没了响应。\n\n如果nmap不能确定到底是哪个状态，这些状态可以写成折中形式`closed|filtered`,表示关闭或者是过滤。\n\n当使用版本探测参数(`-sV`)时，端口信息表也可以包含具体的服务版本信息。\n\n     ~ ⮀ sudo nmap -sV 10.210.96.193\n    \n    Starting Nmap 6.25 ( http://nmap.org ) at 2014-04-18 22:03 CST\n    Nmap scan report for 10.210.96.193\n    Host is up (0.045s latency).\n    Not shown: 996 closed ports\n    PORT      STATE    SERVICE VERSION\n    23/tcp    open     telnet  H3C switch telnetd\n    MAC Address: 3C:E5:A6:D2:39:AD (Hangzhou H3C Technologies Co.)\n    Service Info: Device: switch\n    \n    Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .\n    Nmap done: 1 IP address (1 host up) scanned in 2.88 seconds\n\n\n当使用IP协议扫描(`-sO`)时，nmap则提供IP支持的协议而不是端口：\n\n     ~ ⮀ sudo nmap -sO 10.210.96.193\n\n    Starting Nmap 6.25 ( http://nmap.org ) at 2014-04-18 22:02 CST\n    Nmap scan report for 10.210.96.193\n    Host is up (0.010s latency).\n    Not shown: 252 open|filtered protocols\n    PROTOCOL STATE  SERVICE\n    1        open   icmp\n    6        open   tcp\n    17       open   udp\n    132      closed sctp\n    MAC Address: 3C:E5:A6:D2:39:AD (Hangzhou H3C Technologies Co.)\n\n除了端口信息表，nmap提供目标的更多信息，包括反向DNS域名，操作系统猜测，设备类型和MAC地址。\n\n更多参照[Nmap Guide](http://nmap.org/book/)\n\n     ~ ⮀ nmap --help\n    Nmap 6.25 ( http://nmap.org )\n    Usage: nmap [Scan Type(s)] [Options] {target specification}\n    TARGET SPECIFICATION:\n      Can pass hostnames, IP addresses, networks, etc.\n      Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254\n      -iL <inputfilename>: Input from list of hosts/networks\n      -iR <num hosts>: Choose random targets\n      --exclude <host1[,host2][,host3],...>: Exclude hosts/networks\n      --excludefile <exclude_file>: Exclude list from file\n    HOST DISCOVERY:\n      -sL: List Scan - simply list targets to scan\n      -sn: Ping Scan - disable port scan\n      -Pn: Treat all hosts as online -- skip host discovery\n      -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports\n      -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes\n      -PO[protocol list]: IP Protocol Ping\n      -n/-R: Never do DNS resolution/Always resolve [default: sometimes]\n      --dns-servers <serv1[,serv2],...>: Specify custom DNS servers\n      --system-dns: Use OS's DNS resolver\n      --traceroute: Trace hop path to each host\n    SCAN TECHNIQUES:\n      -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans\n      -sU: UDP Scan\n      -sN/sF/sX: TCP Null, FIN, and Xmas scans\n      --scanflags <flags>: Customize TCP scan flags\n      -sI <zombie host[:probeport]>: Idle scan\n      -sY/sZ: SCTP INIT/COOKIE-ECHO scans\n      -sO: IP protocol scan\n      -b <FTP relay host>: FTP bounce scan\n    PORT SPECIFICATION AND SCAN ORDER:\n      -p <port ranges>: Only scan specified ports\n        Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9\n      -F: Fast mode - Scan fewer ports than the default scan\n      -r: Scan ports consecutively - don't randomize\n      --top-ports <number>: Scan <number> most common ports\n      --port-ratio <ratio>: Scan ports more common than <ratio>\n    SERVICE/VERSION DETECTION:\n      -sV: Probe open ports to determine service/version info\n      --version-intensity <level>: Set from 0 (light) to 9 (try all probes)\n      --version-light: Limit to most likely probes (intensity 2)\n      --version-all: Try every single probe (intensity 9)\n      --version-trace: Show detailed version scan activity (for debugging)\n    SCRIPT SCAN:\n      -sC: equivalent to --script=default\n      --script=<Lua scripts>: <Lua scripts> is a comma separated list of \n               directories, script-files or script-categories\n      --script-args=<n1=v1,[n2=v2,...]>: provide arguments to scripts\n      --script-args-file=filename: provide NSE script args in a file\n      --script-trace: Show all data sent and received\n      --script-updatedb: Update the script database.\n      --script-help=<Lua scripts>: Show help about scripts.\n               <Lua scripts> is a comma separted list of script-files or\n               script-categories.\n    OS DETECTION:\n      -O: Enable OS detection\n      --osscan-limit: Limit OS detection to promising targets\n      --osscan-guess: Guess OS more aggressively\n    TIMING AND PERFORMANCE:\n      Options which take <time> are in seconds, or append 'ms' (milliseconds),\n      's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m).\n      -T<0-5>: Set timing template (higher is faster)\n      --min-hostgroup/max-hostgroup <size>: Parallel host scan group sizes\n      --min-parallelism/max-parallelism <numprobes>: Probe parallelization\n      --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout <time>: Specifies\n          probe round trip time.\n      --max-retries <tries>: Caps number of port scan probe retransmissions.\n      --host-timeout <time>: Give up on target after this long\n      --scan-delay/--max-scan-delay <time>: Adjust delay between probes\n      --min-rate <number>: Send packets no slower than <number> per second\n      --max-rate <number>: Send packets no faster than <number> per second\n    FIREWALL/IDS EVASION AND SPOOFING:\n      -f; --mtu <val>: fragment packets (optionally w/given MTU)\n      -D <decoy1,decoy2[,ME],...>: Cloak a scan with decoys\n      -S <IP_Address>: Spoof source address\n      -e <iface>: Use specified interface\n      -g/--source-port <portnum>: Use given port number\n      --data-length <num>: Append random data to sent packets\n      --ip-options <options>: Send packets with specified ip options\n      --ttl <val>: Set IP time-to-live field\n      --spoof-mac <mac address/prefix/vendor name>: Spoof your MAC address\n      --badsum: Send packets with a bogus TCP/UDP/SCTP checksum\n    OUTPUT:\n      -oN/-oX/-oS/-oG <file>: Output scan in normal, XML, s|<rIpt kIddi3,\n         and Grepable format, respectively, to the given filename.\n      -oA <basename>: Output in the three major formats at once\n      -v: Increase verbosity level (use -vv or more for greater effect)\n      -d: Increase debugging level (use -dd or more for greater effect)\n      --reason: Display the reason a port is in a particular state\n      --open: Only show open (or possibly open) ports\n      --packet-trace: Show all packets sent and received\n      --iflist: Print host interfaces and routes (for debugging)\n      --log-errors: Log errors/warnings to the normal-format output file\n      --append-output: Append to rather than clobber specified output files\n      --resume <filename>: Resume an aborted scan\n      --stylesheet <path/URL>: XSL stylesheet to transform XML output to HTML\n      --webxml: Reference stylesheet from Nmap.Org for more portable XML\n      --no-stylesheet: Prevent associating of XSL stylesheet w/XML output\n    MISC:\n      -6: Enable IPv6 scanning\n      -A: Enable OS detection, version detection, script scanning, and traceroute\n      --datadir <dirname>: Specify custom Nmap data file location\n      --send-eth/--send-ip: Send using raw ethernet frames or IP packets\n      --privileged: Assume that the user is fully privileged\n      --unprivileged: Assume the user lacks raw socket privileges\n      -V: Print version number\n      -h: Print this help summary page.\n    EXAMPLES:\n      nmap -v -A scanme.nmap.org\n      nmap -v -sn 192.168.0.0/16 10.0.0.0/8\n      nmap -v -iR 10000 -Pn -p 80\n    SEE THE MAN PAGE (http://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES\n\n## zmap\n\nZmap是一个开源网络扫描器，旨在帮助研究人员轻松扫描互联网。通过单个机器和可观的上行量，zmap可以在45分钟内扫描整个IPv4地址段，达到以太网的理论上限。\n\nzmap可以研究随时间变化协议的采用情况。检测互联网上可用的服务，让我们更好的理解分布在互联网上的大系统。\n\n详细用法见：[Zmap Documentation](https://zmap.io/documentation.html)\n\nZmap是强有力的工具，但请尊重他人和当地法律。\n\n## masscan\n\n号称最快的互联网端口扫描器，它能够在6分钟内扫遍整个互联网，每秒发送十个百万数据包。\n\n它生成类似`nmap`的结果，但内部机理是类似`scanrand`、`unicornscan`和`zmap`异步传输。主要的区别是比它们都快(笑)。另外，它更灵活，允许任意的地址段和端口段。\n\n自由软件。\n\n    ~/ ⮀ masscan --help\n    MASSCAN is a fast port scanner. The primary input parameters are the\n    IP addresses/ranges you want to scan, and the port numbers. An example\n    is the following, which scans the 10.x.x.x network for web servers:\n     masscan 10.0.0.0/8 -p80\n    The program auto-detects network interface/adapter settings. If this\n    fails, you'll have to set these manually. The following is an\n    example of all the parameters that are needed:\n     --adapter-ip 192.168.10.123\n     --adapter-mac 00-11-22-33-44-55\n     --router-mac 66-55-44-33-22-11\n    Parameters can be set either via the command-line or config-file. The\n    names are the same for both. Thus, the above adapter settings would\n    appear as follows in a configuration file:\n     adapter-ip = 192.168.10.123\n     adapter-mac = 00-11-22-33-44-55\n     router-mac = 66-55-44-33-22-11\n    All single-dash parameters have a spelled out double-dash equivalent,\n    so '-p80' is the same as '--ports 80' (or 'ports = 80' in config file).\n    To use the config file, type:\n     masscan -c <filename>\n    To generate a config-file from the current settings, use the --echo\n    option. This stops the program from actually running, and just echoes\n    the current configuration instead. This is a useful way to generate\n    your first config file, or see a list of parameters you didn't know\n    about. I suggest you try it now:\n     masscan -p1234 --echo\n\n[Masscan github页面](https://github.com/robertdavidgraham/masscan)\n[Masscan: the entire Internet in 3 minutes ](http://blog.erratasec.com/2013/09/masscan-entire-internet-in-3-minutes.html)\n\n## 自制扫描器\n\n没啥好说的，拿这gevent写啊……暂时不开源。通常我先用zmap扫端口，然后送给自己的扫描器去扫。\n",metaData:{layout:"post",title:"且谈扫描器",excerpt:"nmap,zmap and masscan",category:"network",tags:["network"],disqus:!0}}}});
//# sourceMappingURL=56.6cfae204c176451fa4d8.js.map